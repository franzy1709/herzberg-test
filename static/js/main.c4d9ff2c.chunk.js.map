{"version":3,"sources":["utils/join-classes.ts","components/ui-ux/value-distributor/value-distributor.tsx","components/internal/herzberg-ribbon/herzberg-ribbon.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["jc","allNames","filter","s","join","jcm","classNamesMap","Object","keys","key","ValueDistributor","variant","onUserChoice","className","htmlProps","useState","userChoice","setUserChoice","thumbPosition","trackPointClickCb","useCallback","value","isInitState","onClick","style","HerzbergRibbon","props","state","isComplete","answersAccumulator","Map","questionIdx","leftKey","rightKey","this","set","leftChoice","rightChoice","size","testQuestions","length","setState","answers","Array","from","entries","sort","map","onTestCompletion","idx","first","second","leftSide","question","rightSide","onUserChoiceCb","React","Component","App","herzbergTest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4d9ff2c.chunk.js","sourcesContent":["export const jc = (...allNames: string[]) => allNames.filter(s => !!s).join(' ');\nexport const jcm = (classNamesMap: { [className: string]: boolean }) =>\n  Object.keys(classNamesMap)\n    .filter(key => classNamesMap[key])\n    .join(' ');\n","import React, { useCallback, useState } from 'react';\nimport './value-distributor.css';\nimport { jcm } from '../../../utils';\n\nexport type ValueDistributorProps = {\n  variant?: 'large' | 'small',\n  onUserChoice?: (position: number)=>void\n}  & React.HTMLAttributes<HTMLElement>;\n\nexport const ValueDistributor: React.FC<ValueDistributorProps> = ({\n  variant='large', \n  onUserChoice,\n  className='', ...htmlProps})=>{\n  const [userChoice, setUserChoice] = useState<number | null>(null);\n\n  const thumbPosition = userChoice==null ? 2 : userChoice;\n\n  const trackPointClickCb = useCallback((value: number)=>{\n    setUserChoice(value);\n    onUserChoice?.(value);\n  }, []);\n\n  const isInitState = userChoice === null;\n\n  return (<div className={jcm({\n        'ValueDistributor': true, \n        'ValueDistributor--small': variant==='small',\n        'ValueDistributor--init-state': isInitState,\n        [className]: true,\n      })} {...htmlProps}>\n    <div className='tracker'>\n      <div className=\"track\">\n        <div className='track-point' onClick={()=>trackPointClickCb(0)}><div className=\"track-point--lable track-point--lable__left\">5</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(1)}><div className=\"track-point--lable track-point--lable__left\">4</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(2)}><div className=\"track-point--lable track-point--lable__left\">3</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(3)}><div className=\"track-point--lable track-point--lable__left\">2</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(4)}><div className=\"track-point--lable track-point--lable__left\">1</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(1)}><div className=\"track-point--lable track-point--lable__right\">1</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(2)}><div className=\"track-point--lable track-point--lable__right\">2</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(3)}><div className=\"track-point--lable track-point--lable__right\">3</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(4)}><div className=\"track-point--lable track-point--lable__right\">4</div></div>\n        <div className='track-point' onClick={()=>trackPointClickCb(5)}><div className=\"track-point--lable track-point--lable__right\">5</div></div>\n      </div>\n      <div className={jcm({\n          'tracker-thumb': true,\n          'tracker-thumb__left-side': thumbPosition === 0,\n          'tracker-thumb__right-side': thumbPosition === 5,\n        })} \n        style={{\n          '--thumb-position': thumbPosition\n        }as React.CSSProperties}\n        onClick={()=>{\n          if(isInitState){\n            trackPointClickCb(thumbPosition);\n          }\n        }}\n      />\n    </div>\n  </div>)\n}\n\n","import React from 'react';\nimport { jc } from '../../../utils';\nimport { ValueDistributor } from '../../ui-ux/value-distributor';\nimport './herzberg-ribbon.css';\n\nexport type HerzbergRibbonProps = {\n  testQuestions: HerzberTestRecord[];\n  onTestCompletion?: (answers: HerzbergAnswer[])=>void;\n}  & React.HTMLAttributes<HTMLElement>;\n\nexport type HerzbergAnswer = {\n  leftKey: string;\n  leftChoice: number;\n  rightKey: string;\n  rightChoice: number;\n}\n\ntype HerzbergRibbonState = {\n  isComplete: boolean;\n  answersAccumulator: Map<number, HerzbergAnswer>\n}\n\nexport type HerzberTestRecord = {\n  first: {key: string, question: string}\n  second: {key: string, question: string}\n}\n\nexport class HerzbergRibbon extends React.Component<HerzbergRibbonProps, HerzbergRibbonState>{\n  constructor(props: HerzbergRibbonProps){\n    super(props);\n    this.state = {\n      isComplete: false,\n      answersAccumulator: new Map<number, HerzbergAnswer>()\n    }\n  }\n\n  onUserChoiceCb(questionIdx: number, leftKey: string, rightKey: string, userChoice: number){\n    this.state.answersAccumulator.set(questionIdx, {\n      leftKey, leftChoice: 5-userChoice,\n      rightKey, rightChoice: userChoice\n    });\n\n    if(this.state.answersAccumulator.size>=this.props.testQuestions.length){\n      this.setState({isComplete: true});\n      const answers = Array.from(this.state.answersAccumulator.entries())\n        .sort(([idxA], [idxB]) => idxA - idxB)\n        .map(([,answer])=>answer);\n      this.props.onTestCompletion?.(answers);\n    }\n  }\n\n  render(){\n    const {testQuestions, className = '', ...htmlProps} = this.props;\n    \n    return (<div className='HerzbergRibbon'>\n      {testQuestions.map(({first, second}, idx)=>{\n        const {question: leftSide, key: leftKey} = first;\n        const {question: rightSide, key: rightKey} = second;\n        return(\n          <div key={`question-${idx}`} className={jc('herzberg-container', className)} {...htmlProps}>\n            <div className=\"questions-container\">\n              <div className=\"question first-question\">{leftSide}</div>\n              <div className=\"question second-question\">{rightSide}</div>\n            </div>\n            <div className=\"values-distribution\">\n              <ValueDistributor variant='small' onUserChoice={(userChoice)=>this.onUserChoiceCb(idx,leftKey,rightKey,userChoice)} />\n            </div>\n          </div>\n        )\n      })}\n    </div>)\n  }\n}","import React from 'react';\nimport './App.css';\nimport herzbergTest from './components/internal/herzberg-ribbon/fixtures/herzberg.json';\nimport { HerzbergRibbon } from './components/internal/herzberg-ribbon/herzberg-ribbon';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HerzbergRibbon \n        testQuestions={herzbergTest}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}